#! /usr/bin/env node

// Dependencies
var fs = require("fs");
var Tables = require("../index.js");
var output = require("../lib/output.js")(true);
var command = require("commander");
var pkg = require("../package.json");


// Basic command line parts
command
  .description(pkg.description)
  .version(pkg.version);

// Options
command.option("-i, --input [file]", "Input file to use.");
command.option("-o, --output [file]", "Force output to a specific SQLite database of this file name.  By default will create .sql version of the input file if the TABLES_DB_URI environment variable is not provided.");
command.option("-t, --type [csv|json]", "Input type; determined from file name if not provided.  Currently supports csv and json.");
command.option("-s, --silent", "Suppress output besides errors.");

// Parse
command.parse(process.argv);

// Validate input
var errors = isValid(command);
if (errors) {
  errors.forEach(function(e) {
    output.error(e);
  });

  process.exit(1);
}

// Make options for tables
var options = {
  input: command.input ? command.input : undefined,
  inputType: command.type ? command.type : undefined,
  output: !command.silent
};

// Checkout output
if (command.output) {
  options.db = "sqlite://" + command.output;
}

// Create tables
var t = new Tables(options);


// Validate input
function isValid(input) {
  var errors = [];

  // Check that input file exists if provided
  if (input.input && !fs.existsSync(input.input)) {
    errors.push("Input file provided does not exists.");
  }

  // Check for streaming input if file not provided
  if (!input.input && process.stdin.isTTY) {
    errors.push("Input file not provided and no data was piped in.");
  }

  return errors.length ? errors : false;
}
